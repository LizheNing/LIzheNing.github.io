<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Hexo博文中表格渲染异常的解决方案</title>
    <link href="/2021/03/22/Hexo%E5%8D%9A%E6%96%87%E4%B8%AD%E8%A1%A8%E6%A0%BC%E6%B8%B2%E6%9F%93%E5%BC%82%E5%B8%B8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/"/>
    <url>/2021/03/22/Hexo%E5%8D%9A%E6%96%87%E4%B8%AD%E8%A1%A8%E6%A0%BC%E6%B8%B2%E6%9F%93%E5%BC%82%E5%B8%B8%E7%9A%84%E8%A7%A3%E5%86%B3%E6%96%B9%E6%A1%88/</url>
    
    <content type="html"><![CDATA[<p>这是一篇关于Hexo博客中，Markdown原生表格渲染异常的解决方案的备忘。</p><h3 id="环境"><a href="#环境" class="headerlink" title="环境"></a>环境</h3><ul><li>静态生成器：Hexo 5.4.0</li><li>Hexo主题：Fluid</li><li>服务器：Github Page 托管</li><li>文本编辑器：Visual Studio Code(VS)</li><li>文章编辑语法：Markdown</li><li>Mardown预览插件：Markdown Preview Enhanced(MPE) 0.5.17</li></ul><h3 id="问题"><a href="#问题" class="headerlink" title="问题"></a>问题</h3><p>我的博客文章中有表格。在本地编辑的时候，<em>使用VS插件MPE</em>能够预览到文章中表格可以正常渲染，源码见图一，VS渲染后的成果见图二。但是，当我把文章发表到博客上时，文章中的表格没有渲染，仍然显示源码，Hexo博客效果见图三。</p><p><img src="https://i.loli.net/2021/03/22/2wkPpFL7dbzg5am.png" alt="图一"><br><img src="https://i.loli.net/2021/03/22/YVjlpurWN73AFQO.png" alt="图二"><br><img src="https://i.loli.net/2021/03/22/dFEk8CAhvw3uKHT.png" alt="图三"></p><h3 id="理论"><a href="#理论" class="headerlink" title="理论"></a>理论</h3><p>我也不清楚具体原因，可能是Hexo对Markdown语法的支持的问题。</p><h3 id="解决方法"><a href="#解决方法" class="headerlink" title="解决方法"></a>解决方法</h3><p>在表格和正文之间加两个空行即可，加图四。<br><img src="https://i.loli.net/2021/03/22/Y6T7O8PiwoHLVyM.png" alt="图四"></p><h3 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h3><ul><li>[1] <a href="https://www.jianshu.com/p/e19eff4311f4">萌小奇</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>笔记 hexo markdown 表格</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>如何使用hexo搭建个人博客</title>
    <link href="/2021/03/10/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/"/>
    <url>/2021/03/10/%E5%A6%82%E4%BD%95%E4%BD%BF%E7%94%A8hexo%E6%90%AD%E5%BB%BA%E4%B8%AA%E4%BA%BA%E5%8D%9A%E5%AE%A2/</url>
    
    <content type="html"><![CDATA[<h2 id="一、引言"><a href="#一、引言" class="headerlink" title="一、引言"></a>一、引言</h2><p>随着网络技术迭代以及网络巨头的成长，博客、论坛等形式仿佛已经成为历史。</p><p>但是，你是否觉得</p><ol><li>现在的网站千篇一律，我想要另辟蹊径展现个人风采；</li><li>现有的博客网站的功能冗杂陈旧，我那颗热情澎湃的心想要追求自由与极致；</li><li>网络巨头不停的窥探隐私，我好想要拥有一个属于自己的空间；</li><li>简历过于扁平化，我想让HR眼前一亮，发现我的与众不同。</li></ol><p>那么来搭建个人博客吧。这是一个属于你的空间，在这里你可以放飞自我，构建属于自己的世界。</p><p>本文面向 <em>初学者</em> ，介绍如何使用Hexo框架以及Github搭建个人博客。</p><p>但是在正文之前，还是要多说两句：</p><ol><li>对于一个博客网站来说最重要的不是技术而是内容。博客搭建的技术容易实现，但是连续的、高质量的输出很难。</li><li>如果没有连续输出的经历，建议先到博客网站适用一段时间，养成写作习惯后，在来折腾自己的博客。</li><li><a href="https://seveninnovationbasedoc.readthedocs.io/zh_CN/latest/sharePoint/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB.html">别忘了博客的初心是记录</a>。</li></ol><h2 id="二、为什么要选择hexo-github-page搭建自己的博客（常见的博客框架对比）"><a href="#二、为什么要选择hexo-github-page搭建自己的博客（常见的博客框架对比）" class="headerlink" title="二、为什么要选择hexo+github page搭建自己的博客（常见的博客框架对比）"></a>二、为什么要选择hexo+github page搭建自己的博客（常见的博客框架对比）</h2><p>本段内容均来自网络，主要参考了<a href="https://blog.csdn.net/weixin_45784655/article/details/104780438">计算机瞎鼓捣能手</a>和<a href="https://lexcao.github.io/zh/posts/jekyll-hugo-hexo">曹历鑫</a>)文章。常见的博客框架见下表：</p><table><thead><tr><th align="center">框架</th><th align="left">优点</th><th align="left">缺点</th><th align="left">主页</th></tr></thead><tbody><tr><td align="center">Hexo</td><td align="left">1.支持Markdowm; 2.开源且免费；3. 静态部署，操作简单；4.中文社区；5.中文支持；6.在 GitHub Pages 部署简单。</td><td align="left"></td><td align="left"><a href="https://hexo.io/">https://hexo.io/</a></td></tr><tr><td align="center">jekyll</td><td align="left">1. 支持Markdowm;2. 开源且免费；3. 静态部署，操作简单；4. 社区成熟；5. 强大的 GitHub Pages 支持。</td><td align="left">当网站内容不断增加后，构建速度会明显变慢。</td><td align="left"><a href="https://jekyllrb.com/">https://jekyllrb.com/</a></td></tr><tr><td align="center">hugo</td><td align="left">1. 免费开源；2.速度非常快，对构建速度做了优化；3.内置支持很多功能（动态 API 请求的内容、无限制内容类型、shortcakes， 一个灵活的 Markdown 替代、别名重定向）：4. 预制的 Go 模版和模式；5. 无需依赖（不用安装 Go，因为它是编译好的二进制）；</td><td align="left">1. 主题使用 Go 模版，所以需要熟悉 Go；2.没有内置默认主题；3. 缺少扩展性和插件。</td><td align="left"><a href="https://www.gohugo.org/">https://www.gohugo.org/</a></td></tr><tr><td align="center"><a href="https://bestzuo.cn/posts/newsoloblog.html">solo</a></td><td align="left">1. 可以在动态博客和静态博客之间进行切换；2.具有一定活跃度的社区；3.图床免费；4.自带备份功能；5.可以导入 Hexo 博客的 Markdown 文章。</td><td align="left">1.Docker 快速部署难以自定义博客内的样式因此只能采用 Java 源码的方式进行部署；2.博客刷新使用了 Pjax，很多时候自定义的js很容易失效了；3.评论的时候只能登录社区账号。</td><td align="left"><a href="https://solo.b3log.org/">https://solo.b3log.org/</a></td></tr><tr><td align="center"><a href="https://www.php.cn/cms/wordpress/431822.html">wordpress</a></td><td align="left">1.功能强大、扩展性强，这主要得益于其插件众多;2.对seo搜索引擎友好，收录也快，排名靠前;3.适合DIY;4.主题很多;5.备份和网站转移比较方便;6.有强大的社区支持。</td><td align="left">1.只提供一个框架内容需要自己DIY；2.不能安装太多插件，否则会拖累网站速度和降低用户体验；3.服务器空间选择自由较小；4.不能适应大数据。5.只能“伪静态化”。</td><td align="left"><a href="https://wordpress.org/">https://wordpress.org/</a></td></tr></tbody></table><p>我本身不从事计算机与软件相关工作，因此很多问题还需要依靠社区来解决。作为第一个自建博客，希望选择一个上手简单一点的框架，综上，我选择使用hexo。搭建博客之初，并不能确定这个博客会持续更新多久，因此不想有太多的投入，所以选择在托管再Github Page。等到内容足够多或者想玩其他的内容的时候再购买服务器和网址。</p><h2 id="三、本文涉及到的基础知识"><a href="#三、本文涉及到的基础知识" class="headerlink" title="三、本文涉及到的基础知识"></a>三、本文涉及到的基础知识</h2><ol><li>下载并安装node.js;</li><li>下载并安装Git；</li><li>申请一个Github账号；</li><li>创建Github仓库；</li><li>配置Git；</li></ol><p>上述内容涉及广泛，如果细细讲起来会涉及很大的篇幅。因此只介绍最基本的安装操作，至于如何进阶还要诸君探索。都能自己搭建博客的各位，肯定拥有很强的信息搜集能力。</p><h3 id="下载并安装node-js和Git"><a href="#下载并安装node-js和Git" class="headerlink" title="下载并安装node.js和Git"></a>下载并安装node.js和Git</h3><p>node.js和Git安装过程十分相似，都可以分为三步：</p><ul><li>到官网下载应用；直接在官网中下载长期支持的版本（即LTS版本，Long Term Support）。<a href="http://nodejs.cn/download/">这是node.js中文网的下载页面</a>，<a href="https://git-scm.com/downloads">这是Git的下载页面</a>。</li><li>安装应用。只需要注意<em>把安装位置设置在<strong>系统盘以外的盘</strong></em>，其余均可以无脑“下一步”。</li><li>测试安装是否成功。两个软件测试方法相同：<ol><li>打开CMD窗口。</li><li>先测试Git，向窗口中输入：<code>git  --version</code>;</li><li>如果窗口中出现Git的版本号，说明安装成功；结果见下图。</li><li>再测试node.js，向窗口中输入：<code>node  --version</code>;</li><li>如果窗口中出现node.js的版本号，说明安装成功；结果见下图。<br><img src="https://i.loli.net/2021/03/09/CVtxjWUw8qnh5cD.png" alt="安装node.js和Git"></li></ol></li></ul><h3 id="申请一个Github账号并创建仓库"><a href="#申请一个Github账号并创建仓库" class="headerlink" title="申请一个Github账号并创建仓库"></a>申请一个Github账号并创建仓库</h3><p>在网站进行用户注册的过程，我就不向大家罗嗦了，如果大家还有疑问，可以参考wqMV的<a href="https://blog.csdn.net/relyeditor/article/details/85602142">GitHub 新手教程 一，GitHub 注册</a>以及GitHub的<a href="https://docs.github.com/cn/github/getting-started-with-github/signing-up-for-github">官方指导文件</a>。需要注意的一点是：<em>用户名最好兼具私密性和趣味性。不论是在Github主页还是博客，用户名都会反应在Url中，因此最好仔细考虑一下用户名。</em>如果无法加载出来验证信息，可以尝试使用手机注册。</p><p>创建博客仓库（repository）与创建一般的项目仓库的过程几乎相同，但是有几点注意事项，因此我详细列出所有的步骤。</p><ol><li>点击Github主页右上角的“+”，并选择“New repository”。<br><img src="https://i.loli.net/2021/03/10/s9USiBeWHNMm26O.png" alt="位置"></li><li><em>“Repository name”必须设置为“Owner”+“.github.io”</em>，即下图2号蓝色框线中的内容是1号的内容加上“.github.io”。如果之前没有注意到这一步，可以查看博主”老肖79”的<a href="https://blog.csdn.net/dajian790626/article/details/78595684">hexo搭建Github博客上传后，网页显示404问题解决方案</a>中方法进行补救。不过我建议你把仓库删除，然后重新创建一个。<br><img src="https://i.loli.net/2021/03/10/OkBvHKCLfbAmTUd.png" alt="名称设置"></li><li>最后<em>不要更改其他任何设置</em>，直接拉到最后，点击“Create repository”。</li></ol><h3 id="配置Git，以使用SSH为例（可选）"><a href="#配置Git，以使用SSH为例（可选）" class="headerlink" title="配置Git，以使用SSH为例（可选）"></a>配置Git，以使用SSH为例（可选）</h3><p>在使用Git把每次在本地的更新push到Github时，需要验证用户名和密码。这一步的目标是通过预先的配置，使每次更新时不需要验证账号和密码。每次都要验证账户和密码你会觉得很讨厌的。<em>这一步最好在第一次向Github中push内容之前操作，否则会非常麻烦。</em><br>配置过程大致分为六步：</p><ol><li><p>配置用户信息：</p><p>git init<br>git config –global user.name ‘用户名’<br>git config –global user.email ‘用户邮箱’</p></li><li><p>检查本机是否有SSH。打开Git，键入<code>cd ~/. ssh #检查本机已存在的ssh密钥</code>。如果显示结果为：<code>No such file or directory</code>，表明本机没有ssh密钥，可以新建。</p></li><li><p>执行生成公钥和私钥的命令：<code>ssh-keygen -t rsa -C &quot;邮件地址&quot;</code>出现如图字样，说明安装成功，再连续回车3次即可。<br><img src="https://i.loli.net/2021/03/10/wn53HGqsuvmjFSA.png" alt="生成密码"></p></li><li><p>安装成功会显示密钥路径，根据路径找到文件，打开<code>id_rsa.pub</code>文件，将其内容全部复制。</p></li><li><p>打开github网站，点击“Setting”，如下图。在设置页面中选择“SSH and GPG keys”。点击“New SSH Key”粘贴上一步复制的内容到Key位置，Title随便输入。<br><img src="https://i.loli.net/2021/03/10/kOtu7KvSW1eR4d3.png" alt="设置的位置"><br><img src="https://i.loli.net/2021/03/10/FXRGoQBaij3lKOJ.png" alt="SSH key设置"></p></li><li><p>测试是否链接成功：在Git的Bash窗口，输入<code>ssh -T git@github.com</code>，如果出现<code>You&#39;ve successfully authenticated, but GitHub does not provide shell access.</code>则表明配置成功。</p></li></ol><p>本部分内容和部分图片参考“echo 曦”的<a href="https://www.cnblogs.com/cxx8181602/p/11125539.html">git 配置 https和ssh 免密码登录 常用操作命令</a></p><h2 id="四、搭建过程"><a href="#四、搭建过程" class="headerlink" title="四、搭建过程"></a>四、搭建过程</h2><p>搭建过程主要分为四步，hexo的安装、hexo的配置、文章发布和博客模板更换。</p><h3 id="hexo安装"><a href="#hexo安装" class="headerlink" title="hexo安装"></a>hexo安装</h3><p>hexo的安装非常简单，只要在Git中（点击鼠标右键，选择“Git Bash Here”即可打开Git）按照顺序执行以下命令即可：</p><ol><li>使用npm进行全局安装：<code>npm install -g hexo-cli -g</code>；</li><li>在合适的位置新建一个文件夹，用于存放博客的内容，名字随便取；</li><li>初始化刚才新建的文件夹：<code>hexo init blog</code>；</li><li>进入到项目文件中：<code>cd blog</code></li><li>安装依赖程序：<code>npm install</code></li></ol><p>完成上述步骤，hexo就安装完成了。</p><h3 id="hexo的配置"><a href="#hexo的配置" class="headerlink" title="hexo的配置"></a>hexo的配置</h3><p>hexo有很丰富的样式配置方法，需要大家自己去探索，这是hexo的官方<a href="https://hexo.io/zh-cn/docs/configuration.html">配置文档</a>，如果有需要可以自行查阅。我这里只介绍将将博客push到Github的配置要求。</p><ol><li>打开blog文件下的_config.yml文件。</li><li>找到“deploy”，在其中的“type”后输入“git”，在“repo”后输入你的SSH，在“branch”后输入“master”。这其中有两点需要注意：<ul><li>冒号后面必须有一个空格，否则可能会出问题。</li><li>SSH是Github博客仓库主页中复制，参考下图。<br><img src="https://i.loli.net/2021/03/10/gNhGrR1Cd4Bq2Fn.png" alt="配置deploy"></li></ul></li></ol><h3 id="文章发布"><a href="#文章发布" class="headerlink" title="文章发布"></a>文章发布</h3><p>博客的意义就是写文章并发布出去让公众看到，这里将文章发布分成两部分：文章编辑和发布。</p><h4 id="文章编辑"><a href="#文章编辑" class="headerlink" title="文章编辑"></a>文章编辑</h4><p>在博客文件夹中打开Git Bash，执行命令<code>hexo new 测试文件</code>。新建文章默认会放到source/_posts/目录下。文件的后缀默认为md。可以使用Markdown格式对文件进行编辑，也可以直接用文本文档编辑文件。从便于文件管理角度，我更建议另外一种方式，先在草稿文件上编辑，完成所有编辑后再发布。</p><p>source文件夹中至少有两个子文件夹：_posts和_drafts，他们分别代表着提交文件和草稿文件。_posts中的文件不论是否完成编辑，每次执行部署命令时均会上传到网站上。_drafts中的文件通过<code>hexo new draft 测试文件2</code>命令创建，则只能在本地浏览，完成编辑后执行<code>hexo publish _drafts 测试文件2</code>命令，hexo会将文件转移到_posts文件夹中。待下次部署时一并发布。</p><h4 id="发布"><a href="#发布" class="headerlink" title="发布"></a>发布</h4><p>hexo可以先在本地预览确认无误之后再push到Github上。因此这里分为本地的预览和远程发布。</p><h4 id="本地预览"><a href="#本地预览" class="headerlink" title="本地预览"></a>本地预览</h4><ol><li>在Git中执行<code>hexo g</code>命令，该命令作用是将网站资源放在public目录下，相当于执行了hexo generate；</li><li>在Git中执行<code>hexo s</code>命令，该命令作用是启动服务，本地预览，相当于执行了hexo server；</li><li>打开<a href="http://localhost:4000/%EF%BC%8C%E5%8D%B3%E5%8F%AF%E9%A2%84%E8%A7%88%E5%8D%9A%E5%AE%A2%E3%80%82">http://localhost:4000/，即可预览博客。</a></li></ol><h4 id="远程发布"><a href="#远程发布" class="headerlink" title="远程发布"></a>远程发布</h4><ol><li>在Git中执行<code>hexo g</code>命令。</li><li>在Git中执行<code>hexo d</code>命令，进行部署。<ul><li>如果执行命令之后出现<code>ERROR Deployer not found: git</code>，则需要安装一个插件 hexo-deployer-git，执行<code>npm install hexo-deployer-git --save</code>命令即可。</li></ul></li><li>再次在Git中执行<code>hexo d</code>命令，进行部署即可。</li><li>打开http://（你的Github用户名）.github.io/即可访问你的博客。</li></ol><h3 id="博客模板更换"><a href="#博客模板更换" class="headerlink" title="博客模板更换"></a>博客模板更换</h3><p>这是Hexo的官网上的<a href="https://hexo.io/themes/">主题页面</a>，点开每个主题都会教授如何更换主题，因此不在这里过多介绍。</p><h2 id="五、总结"><a href="#五、总结" class="headerlink" title="五、总结"></a>五、总结</h2><p>你以为这就结束了吗？这才是一个开始，是最简单的一步，只要按图索骥就能实现。不断的写文章，不断的写好一篇文章这才是最重要的。加油吧，少年！</p><p>本文在很多内容上都参考了“thanksblog”的博文<a href="https://www.cnblogs.com/thanksblog/p/12900165.html">hexo+github搭建个人博客</a>以及<a href="https://book.douban.com/subject/34613706/">毕小朋的《了不起的Markdown》</a></p><h2 id="六、参考内容"><a href="#六、参考内容" class="headerlink" title="六、参考内容"></a>六、参考内容</h2><ul><li>[1] <a href="https://seveninnovationbasedoc.readthedocs.io/zh_CN/latest/sharePoint/%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA%E8%B5%84%E6%BA%90%E6%B1%87%E6%80%BB.html">“别忘了博客的初心是记录”</a></li><li>[2] <a href="https://blog.csdn.net/weixin_45784655/article/details/104780438">计算机瞎鼓捣能手</a></li><li>[3] <a href="https://lexcao.github.io/zh/posts/jekyll-hugo-hexo">曹历鑫</a></li><li>[4] <a href="https://bestzuo.cn/posts/newsoloblog.html">Sanarous</a></li><li>[5] <a href="https://www.php.cn/cms/wordpress/431822.html">php中文网</a></li><li>[6] <a href="https://blog.csdn.net/relyeditor/article/details/85602142">wqMV</a></li><li>[7] <a href="https://www.cnblogs.com/cxx8181602/p/11125539.html">echo 曦</a></li><li>[8] <a href="https://www.cnblogs.com/thanksblog/p/12900165.html">hexo+github搭建个人博客</a></li><li>[9] <a href="https://book.douban.com/subject/34613706/">《了不起的Markdown》</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>教程 博客 hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>苏州市碳排放达峰路径优化与2050年长期愿景阅读笔记</title>
    <link href="/2021/03/08/%E8%8B%8F%E5%B7%9E%E5%B8%82%E7%A2%B3%E6%8E%92%E6%94%BE%E8%BE%BE%E5%B3%B0%E8%B7%AF%E5%BE%84%E4%BC%98%E5%8C%96%E4%B8%8E2050%E5%B9%B4%E9%95%BF%E6%9C%9F%E6%84%BF%E6%99%AF%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/"/>
    <url>/2021/03/08/%E8%8B%8F%E5%B7%9E%E5%B8%82%E7%A2%B3%E6%8E%92%E6%94%BE%E8%BE%BE%E5%B3%B0%E8%B7%AF%E5%BE%84%E4%BC%98%E5%8C%96%E4%B8%8E2050%E5%B9%B4%E9%95%BF%E6%9C%9F%E6%84%BF%E6%99%AF%E9%98%85%E8%AF%BB%E7%AC%94%E8%AE%B0/</url>
    
    <content type="html"><![CDATA[<table><thead><tr><th>文展序号</th><th>引用信息</th><th>ROF</th><th>SPL</th><th>CPL</th><th>GAP</th><th>RFW</th><th>POC/RPP</th></tr></thead><tbody><tr><td>1</td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr><tr><td></td><td></td><td></td><td></td><td></td><td></td><td></td><td></td></tr></tbody></table>]]></content>
    
    
    
    <tags>
      
      <tag>研究报告 阅读笔记 碳达峰</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>在Zotero中如何移动文献到其他其他分类</title>
    <link href="/2021/03/07/%E5%9C%A8Zotero%E4%B8%AD%E5%A6%82%E4%BD%95%E7%A7%BB%E5%8A%A8%E6%96%87%E7%8C%AE%E5%88%B0%E5%85%B6%E4%BB%96%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB/"/>
    <url>/2021/03/07/%E5%9C%A8Zotero%E4%B8%AD%E5%A6%82%E4%BD%95%E7%A7%BB%E5%8A%A8%E6%96%87%E7%8C%AE%E5%88%B0%E5%85%B6%E4%BB%96%E5%85%B6%E4%BB%96%E5%88%86%E7%B1%BB/</url>
    
    <content type="html"><![CDATA[<blockquote><p>本文完全参考自博主[青柠学术][1]的博文——<a href="https://iseex.github.io/2020-05/Zotero-move-items/">Zotero｜如何在文献集（Collections）之间移动或复制文献？</a>。他也是位宝藏博主。文章不仅发表在个人博客，也在公众号和知乎上更新。文章主要分享学术论文写作，文献检索与管理等学术研究技能。</p></blockquote><h3 id="复制和剪切的区别"><a href="#复制和剪切的区别" class="headerlink" title="复制和剪切的区别"></a>复制和剪切的区别</h3><ol><li>复制：将文献的备份拷贝到另一个分类，因此两个分类中的文件是相同的。即此时同一篇文献保存在两个分类中。这种适合一篇文献涉及到多个领域，需要将他保存在不同的分类中一遍后续查找。</li><li>剪切：将文献从一个分类中移动到其他的分类中，并再原始分类中删除该文献。因此，只有一个分类中该文献。例如，当完成文件阅读将文献归档时，可以使用剪切操作。</li></ol><h3 id="操作方法："><a href="#操作方法：" class="headerlink" title="操作方法："></a>操作方法：</h3><ol><li>复制：在Zotero中可以通过直接拖动的方式，将文献复制到其他分类中。</li><li>剪切：按住“命令键”，再将文件进行拖拽到其他分类中。不同操作系统“命令键”不同：<ul><li>macOS：<code>Cmd</code></li><li>Windows/Linux：<code>Shift</code></li></ul></li></ol><h3 id="参考文章"><a href="#参考文章" class="headerlink" title="参考文章"></a>参考文章</h3><ul><li>[1] <a href="https://iseex.github.io/2020-05/Zotero-move-items/">青柠学术</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>Zotero 技巧 笔记</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>word和WPS中公式自动编号以及统一格式</title>
    <link href="/2021/03/04/word%E5%92%8CWPS%E4%B8%AD%E5%85%AC%E5%BC%8F%E8%87%AA%E5%8A%A8%E7%BC%96%E5%8F%B7%E4%BB%A5%E5%8F%8A%E7%BB%9F%E4%B8%80%E6%A0%BC%E5%BC%8F/"/>
    <url>/2021/03/04/word%E5%92%8CWPS%E4%B8%AD%E5%85%AC%E5%BC%8F%E8%87%AA%E5%8A%A8%E7%BC%96%E5%8F%B7%E4%BB%A5%E5%8F%8A%E7%BB%9F%E4%B8%80%E6%A0%BC%E5%BC%8F/</url>
    
    <content type="html"><![CDATA[<h1 id="word和WPS中公式自动编号以及统一格式"><a href="#word和WPS中公式自动编号以及统一格式" class="headerlink" title="word和WPS中公式自动编号以及统一格式"></a>word和WPS中公式自动编号以及统一格式</h1><blockquote><p>Microsoft Word和WPS是最常用，使用最广泛的的中文文字处理应用程序，由于MS Word绝对的市场占有率以及市场认同度，WPS在功能、布局等方面与Word相似度很高，但是两款软件仍然具有显而易见的区别。相对于WPS，Word的社区更加完整，遇到问题容易搜索到解决方案。在今天的问题中，就能明显感知到Word的历史沉淀。</p></blockquote><p>报告和论文这种格式一定会要求对公式的经行编号，并保证全文公式格式统一。当公式较少时，一切都好说。一旦文件需要反复修改，或者公式较多时，使用自动编号能够非常显著的提高工作效率，降低心脑血压。</p><h2 id="公式格式设置"><a href="#公式格式设置" class="headerlink" title="公式格式设置"></a>公式格式设置</h2><h3 id="通用方法"><a href="#通用方法" class="headerlink" title="通用方法"></a>通用方法</h3><p>这里介绍两种方法，亲测两种方法均适用于WPS和Word。先介绍一种容易理解的方法：</p><ol><li><p>表格法：该方法参考<a href="https://www.zhihu.com/question/19689000/answer/112328038">知乎答主“Zhouxing Su”的回答</a></p><ol><li>在文本中插入一个1×3的表格；</li><li>把公式主体放在中间的表格中并居中，把编号放在右侧表格中并居右。</li><li>设置表格的单元格边距为0；</li><li>设置表格无框线。</li></ol></li><li><p>样式法：该方法参考<a href="https://www.zhihu.com/question/19689000/answer/48425000">知乎答主“拳四郎”的回答</a>以及<a href="https://www.jianshu.com/p/a250d6a310ac">简书用户“资深刘刘”的文章</a></p><ol><li>调出页面标尺确定文本水平中心。打开“视图”选项卡中，勾选“标尺”选框。根据“标尺”确定文档水平中心位置。根据下图一，我的文档宽度为38个字符，因此<em>水平中心为19个字符</em>，<em>最右侧为38字符</em>。<br><img src="https://i.loli.net/2021/03/04/71JhBfcDwR6qGtb.png" alt="确定水平中心"></li><li>新建公式样式。打开“开始”选项卡中，在“样式”下拉框中选择“新建样式”。修改“名称”为“公式格式”。（名字可以任意取）</li><li>修改样式参数。在“新建样式”对话框中选择“格式”按钮，并在下拉框中：<ol><li>点选“段落”，在“缩进和间距”选项卡下，设置“行距”为“单倍行距”；在“换行和分页”选项卡下，设置“文本对齐方式”为“居中对齐”；<br><img src="https://i.loli.net/2021/03/04/Ak4hJqtfGR7SM1z.png" alt="段落设置"></li><li>点选“制表位”。<ul><li>设置公式居中对齐标志。在“制表位置”中输入19（第一步确定的文档水平中心对应的字符数），“对齐方式”选择“居中”，“前导符”选择“无”。点击“设置”按钮完成设置。</li><li>设置编号右对齐标志。在“制表位置”中输入38（第一步确定的文档最右侧对应的字符数），“对齐方式”选择“右对齐”，“前导符”选择“无”。点击“设置”按钮完成设置。<br><img src="https://i.loli.net/2021/03/04/BXTSiamEqtpgChP.png" alt="制表位设置"></li></ul></li><li>点击“确定”，完成设置。</li></ol></li><li>公式排版。<ol><li>在word中输入公式和编号。</li><li>将公式所在行样式设置为“公式格式”。</li><li>将光标放在行首，键入“Tab”键，再将光标放在标号之前，再次键入“Tab”键。<br><img src="https://i.loli.net/2021/03/04/jRxE1D2AcKlIhrB.gif" alt="排版流程"></li></ol></li></ol></li></ol><h3 id="只适用Word的方法"><a href="#只适用Word的方法" class="headerlink" title="只适用Word的方法"></a>只适用Word的方法</h3><p>只要满足以下两个条件，即可快速设置公式格式与编号。本方法参考<a href="https://www.zhihu.com/question/19689000/answer/172003973">知乎答主：Nero的回答</a>：</p><ul><li>使用Word2016（1708版）以及以后版本；</li><li>使用Word内置的公式编辑器编辑公式；</li></ul><p>在编辑完成公式主体之后，键入#和公式编号，保持光标在编号之后，然后回车。即可完成公式编号并统一了格式，但是此种方法只能使用默认的格式，无法更改格式。效果如下图所示：<br><img src="https://i.loli.net/2021/03/03/Ttn2uVP4sRCwzhF.png" alt="快捷方法"></p><h2 id="公式自动编号"><a href="#公式自动编号" class="headerlink" title="公式自动编号"></a>公式自动编号</h2><h3 id="通过题注对公式自动编号"><a href="#通过题注对公式自动编号" class="headerlink" title="通过题注对公式自动编号"></a>通过题注对公式自动编号</h3><p>该方法参考自<a href="https://blog.csdn.net/sinat_37367944/article/details/88583752">Macrocell</a>的博文。</p><ol><li>插入题注。将光标放置在即将输入公式编号的位置上，单击“引用”选项卡，选择“题注”选项。<br><img src="https://i.loli.net/2021/03/04/jbQ287xUhtrHSCL.png" alt="插入题注"></li><li>编辑题注。<ul><li>将“标签”改为“公式”；</li><li>勾选“从题注中排除标签”；</li><li>单击“编号”；</li><li>不要勾选“包含章节号”</li><li>单击“题注编号”中的“确定”；</li><li>单击“题注”中的“确定”，完成设置。<br><img src="https://i.loli.net/2021/03/04/rJFseHha3WkB5SG.png" alt="编辑题注"></li></ul></li><li>设置格式。将公式所在行设置为“公式格式”样式，在相应位置按“Tab”键。完成格式设置。</li><li>重复使用。当第一个公式设置完成后。复制第一个公式（公式a）所在行，黏贴到其他公式（公式b）对应行。删除原有公式（公式a），键入相应的公式（公式b）即可。</li><li>编号更新。选中需要更新编号的公式，或者使用“Ctrl+A”快捷键，选中全文。右键，选择“更新域”。<br><img src="https://i.loli.net/2021/03/04/9Mg1PWs3d6L85Of.gif" alt="编号更新"></li></ol><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li>[1] <a href="https://www.jianshu.com/p/a250d6a310ac">公式的自动编号</a></li><li>[2] <a href="https://www.zhihu.com/question/19689000/answer/112328038">知乎答主：Zhouxing Su的回答</a></li><li>[3] <a href="https://www.zhihu.com/question/19689000/answer/48425000">知乎答主：拳四郎的回答</a></li><li>[4] <a href="https://www.zhihu.com/question/19689000/answer/172003973">知乎答主：Nero的回答</a></li><li>[5] <a href="https://blog.csdn.net/sinat_37367944/article/details/88583752">Word公式自动编号</a></li></ul>]]></content>
    
    
    
    <tags>
      
      <tag>办公技巧, word, 公式自动编号, 公式格式统一</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2021/02/25/hello-world/"/>
    <url>/2021/02/25/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    
  </entry>
  
  
  
  
</search>
